[deoptimize context: 9cf14679]
[marking STRING_ADD_RIGHT 0xf7e0a780 for recompilation, reason: small function, ICs with typeinfo: 0/3 (0%)]
[disabled optimization for STRING_ADD_RIGHT, reason: inlined runtime function: IsStringWrapperSafeForDefaultValueOf]
[marking  0x82b7a908 for recompilation, reason: hot and stable, ICs with typeinfo: 3/9 (33%)]
[optimizing:  / 82b7a909 - took 1.000, 0.000, 0.000 ms]
[disabled optimization for , reason: eval]
[disabled optimization for , reason: eval]
**** DEOPT:  at bailout #7, address 0x0, frame size 160
            ;;; @176: deoptimize.
[deoptimizing: begin 0x82b7a909  @7]
  translating  => node=114, height=32
    0x0020f250: [top + 104] <- 0x82b7aa49 ; [sp + 48] 0000000082B7AA49 <an Object>
    0x0020f248: [top + 96] <- 00000000F7E04121 <undefined> ; literal
    0x0020f240: [top + 88] <- 0x82b7aa01 ; [sp + 64] 0000000082B7AA01 <JS Function require>
    0x0020f238: [top + 80] <- 00000000F7E04121 <undefined> ; literal
    0x0020f230: [top + 72] <- 00000000F7E04121 <undefined> ; literal
    0x0020f228: [top + 64] <- 00000000F7E04121 <undefined> ; literal
    0x0020f220: [top + 56] <- 0xbbe1247e ; caller's pc
    0x0020f218: [top + 48] <- 0x0020f280 ; caller's fp
    0x0020f210: [top + 40] <- 0x82b7a899; context
    0x0020f208: [top + 32] <- 0x82b7a909; function
    0x0020f200: [top + 24] <- 1000000 ; [sp + 72] (smi)
    0x0020f1f8: [top + 16] <- 1000000 ; [sp + 40] (smi)
    0x0020f1f0: [top + 8] <- 00000000F7E04121 <undefined> ; literal
    0x0020f1e8: [top + 0] <- 0x9cf99f31 ; rbx 000000009CF99F31 <an Object>
[deoptimizing: end 0x82b7a909  => node=114, pc=0xbbe6aa55, state=TOS_REG, alignment=no padding, took 0.000 ms]
[removing optimized code for: ]
[marking _makeBuckets 0xf7e1f230 for recompilation, reason: small function, ICs with typeinfo: 3/6 (50%)]
[optimizing: _makeBuckets / f7e1f231 - took 0.000, 0.000, 0.000 ms]
[marking _keyAsBucketIndex 0xf7e1f278 for recompilation, reason: small function, ICs with typeinfo: 2/3 (66%)]
[marking inserted 0xf7e1fa58 for recompilation, reason: small function, ICs with typeinfo: 0/0 (100%)]
[marking _isOverCapacity 0xf7e1f398 for recompilation, reason: small function, ICs with typeinfo: 4/5 (80%)]
[marking _checkResize 0xf7e1f3e0 for recompilation, reason: small function, ICs with typeinfo: 2/4 (50%)]
[marking set 0xf7e1f620 for recompilation, reason: small function, ICs with typeinfo: 15/19 (78%)]
Inlined hash called from _keyAsBucketIndex.
Inlined _keyAsBucketIndex called from set.
Inlined _getEntryWithKey called from set.
Inlined Entry called from set.
Inlined inserted called from set.
Inlined _isOverCapacity called from _checkResize.
Inlined _checkResize called from set.
[optimizing: set / f7e1f621 - took 6.000, 1.000, 0.000 ms]
[marking ENTRY_FUNCTION_MAP 0x82bc5f18 for recompilation, reason: not much type info but very hot, ICs with typeinfo: 3/37 (8%)]
Did not inline set called from ENTRY_FUNCTION_MAP (target text too big).
Did not inline global.setTimeout called from ENTRY_FUNCTION_MAP (target requires context change).
[optimizing: ENTRY_FUNCTION_MAP / 82bc5f19 - took 0.000, 1.000, 0.000 ms]
**** DEOPT: ENTRY_FUNCTION_MAP at bailout #8, address 0x0, frame size 296
            ;;; @124: deoptimize.
[deoptimizing: begin 0x82bc5f19 ENTRY_FUNCTION_MAP @8]
  translating ENTRY_FUNCTION_MAP => node=115, height=64
    0x0020f1e0: [top + 96] <- 0xf7e06c91 ; [sp + 144] 00000000F7E06C91 <JS Global Object>
    0x0020f1d8: [top + 88] <- 0xbbe6abdc ; caller's pc
    0x0020f1d0: [top + 80] <- 0x0020f218 ; caller's fp
    0x0020f1c8: [top + 72] <- 0x82bc5f61; context
    0x0020f1c0: [top + 64] <- 0x82bc5f19; function
    0x0020f1b8: [top + 56] <- 0x82bc5e81 ; [sp + 160] 0000000082BC5E81 <a Map>
    0x0020f1b0: [top + 48] <- 0x82bc5f01 ; [sp + 168] 0000000082BC5F01 <an Object>
    0x0020f1a8: [top + 40] <- 0xf7e04121 ; [sp + 176] 00000000F7E04121 <undefined>
    0x0020f1a0: [top + 32] <- 0xf424000000000 ; [sp + 192] 1000000
    0x0020f198: [top + 24] <- 0 ; rbx (smi)
    0x0020f190: [top + 16] <- 00000000F7E04121 <undefined> ; literal
    0x0020f188: [top + 8] <- 00000000F7E04121 <undefined> ; literal
    0x0020f180: [top + 0] <- 00000000F7E04121 <undefined> ; literal
[deoptimizing: end 0x82bc5f19 ENTRY_FUNCTION_MAP => node=115, pc=0xbbe68a67, state=NO_REGISTERS, alignment=no padding, took 1.000 ms]
[removing optimized code for: ENTRY_FUNCTION_MAP]
[optimizing: _keyAsBucketIndex / f7e1f279 - took 0.000, 0.000, 0.000 ms]
[marking equals 0x82bcedd0 for recompilation, reason: small function, ICs with typeinfo: 0/1 (0%)]
[marking accessed 0xf7e1fae8 for recompilation, reason: small function, ICs with typeinfo: 0/0 (100%)]
[marking get 0xf7e1f590 for recompilation, reason: small function, ICs with typeinfo: 6/6 (100%)]
Inlined _keyAsBucketIndex called from get.
Inlined equals called from _getEntryWithKey.
Inlined _getEntryWithKey called from get.
Inlined accessed called from get.
[optimizing: get / f7e1f591 - took 0.000, 0.000, 0.000 ms]
[marking hash 0x82bced88 for recompilation, reason: hot and stable, ICs with typeinfo: 3/15 (20%)]
[optimizing: hash / 82bced89 - took 0.000, 1.000, 0.000 ms]
[marking ENTRY_FUNCTION_MAP 0x82bc5f18 for recompilation, reason: hot and stable, ICs with typeinfo: 7/37 (18%)]
Did not inline set called from ENTRY_FUNCTION_MAP (target text too big).
Did not inline get called from ENTRY_FUNCTION_MAP (target requires context change).
Did not inline now called from ENTRY_FUNCTION_MAP (target not inlineable).
Did not inline get called from ENTRY_FUNCTION_MAP (target requires context change).
Did not inline global.setTimeout called from ENTRY_FUNCTION_MAP (target requires context change).
[optimizing: ENTRY_FUNCTION_MAP / 82bc5f19 - took 0.000, 1.000, 0.000 ms]
**** DEOPT: ENTRY_FUNCTION_MAP at bailout #17, address 0x0, frame size 288
            ;;; @210: deoptimize.
[deoptimizing: begin 0x82bc5f19 ENTRY_FUNCTION_MAP @17]
  translating ENTRY_FUNCTION_MAP => node=172, height=64
    0x0020f1e0: [top + 96] <- 0xf7e06c91 ; [sp + 96] 00000000F7E06C91 <JS Global Object>
    0x0020f1d8: [top + 88] <- 0xbbe6abdc ; caller's pc
    0x0020f1d0: [top + 80] <- 0x0020f218 ; caller's fp
    0x0020f1c8: [top + 72] <- 0x82bc5f61; context
    0x0020f1c0: [top + 64] <- 0x82bc5f19; function
    0x0020f1b8: [top + 56] <- 0x82bc5e81 ; [sp + 120] 0000000082BC5E81 <a Map>
    0x0020f1b0: [top + 48] <- 00000000F7E04121 <undefined> ; literal
    0x0020f1a8: [top + 40] <- 0x82bc5f01 ; [sp + 112] 0000000082BC5F01 <an Object>
    0x0020f1a0: [top + 32] <- 0xf424000000000 ; [sp + 128] 1000000
    0x0020f198: [top + 24] <- 1000000 ; [sp + 80] (smi)
    0x0020f190: [top + 16] <- 0x9dfd5d49 ; [sp + 184] 000000009DFD5D49 <Number: 1370378791799>
    0x0020f188: [top + 8] <- 00000000F7E04121 <undefined> ; literal
    0x0020f180: [top + 0] <- 00000000F7E04121 <undefined> ; literal
[deoptimizing: end 0x82bc5f19 ENTRY_FUNCTION_MAP => node=172, pc=0xbbe68baa, state=NO_REGISTERS, alignment=no padding, took 0.000 ms]
[removing optimized code for: ENTRY_FUNCTION_MAP]
[marking ENTRY_FUNCTION_MAP 0x82bc5f18 for recompilation, reason: hot and stable, ICs with typeinfo: 12/37 (32%)]
Did not inline set called from ENTRY_FUNCTION_MAP (target text too big).
Did not inline get called from ENTRY_FUNCTION_MAP (target requires context change).
Did not inline now called from ENTRY_FUNCTION_MAP (target not inlineable).
Did not inline get called from ENTRY_FUNCTION_MAP (target requires context change).
Did not inline get called from ENTRY_FUNCTION_MAP (target requires context change).
Did not inline global.setTimeout called from ENTRY_FUNCTION_MAP (target requires context change).
[optimizing: ENTRY_FUNCTION_MAP / 82bc5f19 - took 0.000, 0.000, 0.000 ms]
**** DEOPT: get at bailout #16, address 0x0, frame size 32
            ;;; @140: deoptimize.
[deoptimizing: begin 0xf7e1f591 get @16]
  translating get => node=80, height=24
    0x0020f0a0: [top + 64] <- 0x82bc5e81 ; rdx 0000000082BC5E81 <a Map>
    0x0020f098: [top + 56] <- 0x20000000000000 ; [sp + 64] 2097152
    0x0020f090: [top + 48] <- 0xbbe8ea23 ; caller's pc
    0x0020f088: [top + 40] <- 0x0020f1d0 ; caller's fp
    0x0020f080: [top + 32] <- 0x82bc5dd1; context
    0x0020f078: [top + 24] <- 0xf7e1f591; function
    0x0020f070: [top + 16] <- 0x00000000 ; rbx 0
    0x0020f068: [top + 8] <- 00000000F7E04121 <undefined> ; literal
    0x0020f060: [top + 0] <- 0xf7e1f591 ; [sp + 16] 00000000F7E1F591 <JS Function get>
  translating _getEntryWithKey => node=65, height=16
    0x0020f058: [top + 64] <- 0x82bc5e81 ; rdx 0000000082BC5E81 <a Map>
    0x0020f050: [top + 56] <- 0xa60ac649 ; rcx 00000000A60AC649 <an Entry>
    0x0020f048: [top + 48] <- 0x20000000000000 ; [sp + 64] 2097152
    0x0020f040: [top + 40] <- 0xbbe8bd94 ; caller's pc
    0x0020f038: [top + 32] <- 0x0020f088 ; caller's fp
    0x0020f030: [top + 24] <- 0x82bc5dd1; context
    0x0020f028: [top + 16] <- 0xf7e1f429; function
    0x0020f020: [top + 8] <- 0000000082BCEDD1 <JS Function equals> ; literal
    0x0020f018: [top + 0] <- 00000000F7E1F429 <JS Function _getEntryWithKey> ; literal
[deoptimizing: end 0xf7e1f429 _getEntryWithKey => node=65, pc=0xbbe8692b, state=NO_REGISTERS, alignment=no padding, took 0.000 ms]
[removing optimized code for: get]
[optimizing: equals / 82bcedd1 - took 0.000, 0.000, 0.000 ms]
[marking get 0xf7e1f590 for recompilation, reason: small function, ICs with typeinfo: 6/6 (100%)]
Inlined _keyAsBucketIndex called from get.
Inlined equals called from _getEntryWithKey.
Inlined _getEntryWithKey called from get.
Inlined accessed called from get.
[optimizing: get / f7e1f591 - took 0.000, 0.000, 0.000 ms]
**** DEOPT: ENTRY_FUNCTION_MAP at bailout #25, address 0x0, frame size 280
            ;;; @284: deoptimize.
[deoptimizing: begin 0x82bc5f19 ENTRY_FUNCTION_MAP @25]
  translating ENTRY_FUNCTION_MAP => node=264, height=64
    0x0020f1e0: [top + 96] <- 0xf7e06c91 ; [sp + 56] 00000000F7E06C91 <JS Global Object>
    0x0020f1d8: [top + 88] <- 0xbbe6abdc ; caller's pc
    0x0020f1d0: [top + 80] <- 0x0020f218 ; caller's fp
    0x0020f1c8: [top + 72] <- 0x82bc5f61; context
    0x0020f1c0: [top + 64] <- 0x82bc5f19; function
    0x0020f1b8: [top + 56] <- 0x82bc5e81 ; [sp + 80] 0000000082BC5E81 <a Map>
    0x0020f1b0: [top + 48] <- 00000000F7E04121 <undefined> ; literal
    0x0020f1a8: [top + 40] <- 0xf7e04121 ; [sp + 72] 00000000F7E04121 <undefined>
    0x0020f1a0: [top + 32] <- 0xf424000000000 ; [sp + 88] 1000000
    0x0020f198: [top + 24] <- 3000000 ; [sp + 48] (smi)
    0x0020f190: [top + 16] <- 0x9dfd5d49 ; [sp + 96] 000000009DFD5D49 <Number: 1370378791799>
    0x0020f188: [top + 8] <- 3000000 ; [sp + 104] (smi)
    0x0020f180: [top + 0] <- 00000000F7E04121 <undefined> ; literal
[deoptimizing: end 0x82bc5f19 ENTRY_FUNCTION_MAP => node=264, pc=0xbbe68ce3, state=NO_REGISTERS, alignment=no padding, took 0.000 ms]
[removing optimized code for: ENTRY_FUNCTION_MAP]
[marking ENTRY_FUNCTION_MAP 0x82bc5f18 for recompilation, reason: hot and stable, ICs with typeinfo: 15/37 (40%)]
Did not inline set called from ENTRY_FUNCTION_MAP (target text too big).
Did not inline get called from ENTRY_FUNCTION_MAP (target requires context change).
Did not inline now called from ENTRY_FUNCTION_MAP (target not inlineable).
Did not inline get called from ENTRY_FUNCTION_MAP (target requires context change).
Did not inline get called from ENTRY_FUNCTION_MAP (target requires context change).
Did not inline get called from ENTRY_FUNCTION_MAP (target requires context change).
Did not inline global.setTimeout called from ENTRY_FUNCTION_MAP (target requires context change).
[optimizing: ENTRY_FUNCTION_MAP / 82bc5f19 - took 0.000, 0.000, 0.000 ms]
**** DEOPT: ENTRY_FUNCTION_MAP at bailout #32, address 0x0, frame size 280
            ;;; @354: deoptimize.
[deoptimizing: begin 0x82bc5f19 ENTRY_FUNCTION_MAP @32]
  translating ENTRY_FUNCTION_MAP => node=337, height=64
    0x0020f1e0: [top + 96] <- 0xf7e06c91 ; [sp + 40] 00000000F7E06C91 <JS Global Object>
    0x0020f1d8: [top + 88] <- 0xbbe6abdc ; caller's pc
    0x0020f1d0: [top + 80] <- 0x0020f218 ; caller's fp
    0x0020f1c8: [top + 72] <- 0x82bc5f61; context
    0x0020f1c0: [top + 64] <- 0x82bc5f19; function
    0x0020f1b8: [top + 56] <- 0x82bc5e81 ; [sp + 64] 0000000082BC5E81 <a Map>
    0x0020f1b0: [top + 48] <- 00000000F7E04121 <undefined> ; literal
    0x0020f1a8: [top + 40] <- 0x82bc5f01 ; [sp + 56] 0000000082BC5F01 <an Object>
    0x0020f1a0: [top + 32] <- 0xf424000000000 ; [sp + 72] 1000000
    0x0020f198: [top + 24] <- 4294967295 ; [sp + 32] (heap number)
    0x0020f190: [top + 16] <- 0x9dfd5d49 ; [sp + 80] 000000009DFD5D49 <Number: 1370378791799>
    0x0020f188: [top + 8] <- 00000000F7E04121 <undefined> ; literal
    0x0020f180: [top + 0] <- 00000000F7E04121 <undefined> ; literal
[deoptimizing: end 0x82bc5f19 ENTRY_FUNCTION_MAP => node=337, pc=0xbbe68dfe, state=NO_REGISTERS, alignment=no padding, took 0.000 ms]
Materializing a new heap number FFFFFFFF00000000 [-1.000000e+000] in slot 000000000020F198
[removing optimized code for: ENTRY_FUNCTION_MAP]
[marking ENTRY_FUNCTION_NATIVE 0xe9debe18 for recompilation, reason: not much type info but very hot, ICs with typeinfo: 2/36 (5%)]
Did not inline global.setTimeout called from ENTRY_FUNCTION_NATIVE (target requires context change).
[optimizing: ENTRY_FUNCTION_NATIVE / e9debe19 - took 0.000, 0.000, 0.000 ms]
**** DEOPT: ENTRY_FUNCTION_NATIVE at bailout #4, address 0x0, frame size 280
            ;;; @96: deoptimize.
[deoptimizing: begin 0xe9debe19 ENTRY_FUNCTION_NATIVE @4]
  translating ENTRY_FUNCTION_NATIVE => node=103, height=64
    0x0020f1e0: [top + 96] <- 0xf7e06c91 ; [sp + 136] 00000000F7E06C91 <JS Global Object>
    0x0020f1d8: [top + 88] <- 0xbbe6ac2d ; caller's pc
    0x0020f1d0: [top + 80] <- 0x0020f218 ; caller's fp
    0x0020f1c8: [top + 72] <- 0xe9debda1; context
    0x0020f1c0: [top + 64] <- 0xe9debe19; function
    0x0020f1b8: [top + 56] <- 0xe9debe01 ; [sp + 152] 00000000E9DEBE01 <an Object>
    0x0020f1b0: [top + 48] <- 0xe9debde9 ; [sp + 160] 00000000E9DEBDE9 <an Object>
    0x0020f1a8: [top + 40] <- 0xf7e04121 ; [sp + 168] 00000000F7E04121 <undefined>
    0x0020f1a0: [top + 32] <- 0xf424000000000 ; [sp + 176] 1000000
    0x0020f198: [top + 24] <- 0 ; rbx (smi)
    0x0020f190: [top + 16] <- 00000000F7E04121 <undefined> ; literal
    0x0020f188: [top + 8] <- 00000000F7E04121 <undefined> ; literal
    0x0020f180: [top + 0] <- 00000000F7E04121 <undefined> ; literal
[deoptimizing: end 0xe9debe19 ENTRY_FUNCTION_NATIVE => node=103, pc=0xbbe69257, state=NO_REGISTERS, alignment=no padding, took 0.000 ms]
[removing optimized code for: ENTRY_FUNCTION_NATIVE]
[marking ENTRY_FUNCTION_NATIVE 0xe9debe18 for recompilation, reason: hot and stable, ICs with typeinfo: 6/36 (16%)]
Did not inline now called from ENTRY_FUNCTION_NATIVE (target not inlineable).
Did not inline global.setTimeout called from ENTRY_FUNCTION_NATIVE (target requires context change).
[optimizing: ENTRY_FUNCTION_NATIVE / e9debe19 - took 0.000, 1.000, 0.000 ms]
**** DEOPT: ENTRY_FUNCTION_NATIVE at bailout #14, address 0x0, frame size 280
            ;;; @180: deoptimize.
[deoptimizing: begin 0xe9debe19 ENTRY_FUNCTION_NATIVE @14]
  translating ENTRY_FUNCTION_NATIVE => node=155, height=64
    0x0020f1e0: [top + 96] <- 0xf7e06c91 ; r9 00000000F7E06C91 <JS Global Object>
    0x0020f1d8: [top + 88] <- 0xbbe6ac2d ; caller's pc
    0x0020f1d0: [top + 80] <- 0x0020f218 ; caller's fp
    0x0020f1c8: [top + 72] <- 0xe9debda1; context
    0x0020f1c0: [top + 64] <- 0xe9debe19; function
    0x0020f1b8: [top + 56] <- 0xe9debe01 ; rdi 00000000E9DEBE01 <an Object>
    0x0020f1b0: [top + 48] <- 00000000F7E04121 <undefined> ; literal
    0x0020f1a8: [top + 40] <- 0xe9debde9 ; rdx 00000000E9DEBDE9 <an Object>
    0x0020f1a0: [top + 32] <- 0xf424000000000 ; rcx 1000000
    0x0020f198: [top + 24] <- 1000000 ; rax (smi)
    0x0020f190: [top + 16] <- 0x9cfe4651 ; [sp + 160] 000000009CFE4651 <Number: 1370378791932>
    0x0020f188: [top + 8] <- 00000000F7E04121 <undefined> ; literal
    0x0020f180: [top + 0] <- 00000000F7E04121 <undefined> ; literal
[deoptimizing: end 0xe9debe19 ENTRY_FUNCTION_NATIVE => node=155, pc=0xbbe6938e, state=NO_REGISTERS, alignment=no padding, took 0.000 ms]
[removing optimized code for: ENTRY_FUNCTION_NATIVE]
[marking ENTRY_FUNCTION_NATIVE 0xe9debe18 for recompilation, reason: hot and stable, ICs with typeinfo: 11/36 (30%)]
Did not inline now called from ENTRY_FUNCTION_NATIVE (target not inlineable).
Did not inline global.setTimeout called from ENTRY_FUNCTION_NATIVE (target requires context change).
[optimizing: ENTRY_FUNCTION_NATIVE / e9debe19 - took 0.000, 0.000, 0.000 ms]
**** DEOPT: ENTRY_FUNCTION_NATIVE at bailout #20, address 0x0, frame size 280
            ;;; @246: deoptimize.
[deoptimizing: begin 0xe9debe19 ENTRY_FUNCTION_NATIVE @20]
  translating ENTRY_FUNCTION_NATIVE => node=242, height=64
    0x0020f1e0: [top + 96] <- 0xf7e06c91 ; [sp + 56] 00000000F7E06C91 <JS Global Object>
    0x0020f1d8: [top + 88] <- 0xbbe6ac2d ; caller's pc
    0x0020f1d0: [top + 80] <- 0x0020f218 ; caller's fp
    0x0020f1c8: [top + 72] <- 0xe9debda1; context
    0x0020f1c0: [top + 64] <- 0xe9debe19; function
    0x0020f1b8: [top + 56] <- 0xe9debe01 ; [sp + 80] 00000000E9DEBE01 <an Object>
    0x0020f1b0: [top + 48] <- 00000000F7E04121 <undefined> ; literal
    0x0020f1a8: [top + 40] <- 0xf7e04121 ; [sp + 72] 00000000F7E04121 <undefined>
    0x0020f1a0: [top + 32] <- 0xf424000000000 ; [sp + 88] 1000000
    0x0020f198: [top + 24] <- 3000000 ; [sp + 48] (smi)
    0x0020f190: [top + 16] <- 0x9cfe4651 ; [sp + 96] 000000009CFE4651 <Number: 1370378791932>
    0x0020f188: [top + 8] <- 3000000 ; [sp + 104] (smi)
    0x0020f180: [top + 0] <- 00000000F7E04121 <undefined> ; literal
[deoptimizing: end 0xe9debe19 ENTRY_FUNCTION_NATIVE => node=242, pc=0xbbe694bb, state=NO_REGISTERS, alignment=no padding, took 0.000 ms]
[removing optimized code for: ENTRY_FUNCTION_NATIVE]
[marking ENTRY_FUNCTION_NATIVE 0xe9debe18 for recompilation, reason: hot and stable, ICs with typeinfo: 14/36 (38%)]
Did not inline now called from ENTRY_FUNCTION_NATIVE (target not inlineable).
Did not inline global.setTimeout called from ENTRY_FUNCTION_NATIVE (target requires context change).
[optimizing: ENTRY_FUNCTION_NATIVE / e9debe19 - took 0.000, 1.000, 0.000 ms]
**** DEOPT: ENTRY_FUNCTION_NATIVE at bailout #29, address 0x0, frame size 280
            ;;; @318: deoptimize.
[deoptimizing: begin 0xe9debe19 ENTRY_FUNCTION_NATIVE @29]
  translating ENTRY_FUNCTION_NATIVE => node=310, height=64
    0x0020f1e0: [top + 96] <- 0xf7e06c91 ; r9 00000000F7E06C91 <JS Global Object>
    0x0020f1d8: [top + 88] <- 0xbbe6ac2d ; caller's pc
    0x0020f1d0: [top + 80] <- 0x0020f218 ; caller's fp
    0x0020f1c8: [top + 72] <- 0xe9debda1; context
    0x0020f1c0: [top + 64] <- 0xe9debe19; function
    0x0020f1b8: [top + 56] <- 0xe9debe01 ; rdi 00000000E9DEBE01 <an Object>
    0x0020f1b0: [top + 48] <- 00000000F7E04121 <undefined> ; literal
    0x0020f1a8: [top + 40] <- 0xe9debde9 ; rax 00000000E9DEBDE9 <an Object>
    0x0020f1a0: [top + 32] <- 0xf424000000000 ; rcx 1000000
    0x0020f198: [top + 24] <- 4294967295 ; r15 (heap number)
    0x0020f190: [top + 16] <- 0x9cfe4651 ; rbx 000000009CFE4651 <Number: 1370378791932>
    0x0020f188: [top + 8] <- 00000000F7E04121 <undefined> ; literal
    0x0020f180: [top + 0] <- 00000000F7E04121 <undefined> ; literal
[deoptimizing: end 0xe9debe19 ENTRY_FUNCTION_NATIVE => node=310, pc=0xbbe695ca, state=NO_REGISTERS, alignment=no padding, took 0.000 ms]
Materializing a new heap number FFFFFFFF00000000 [-1.000000e+000] in slot 000000000020F198
[removing optimized code for: ENTRY_FUNCTION_NATIVE]
**** DEOPT: set at bailout #19, address 0x0, frame size 128
            ;;; @188: deoptimize.
[deoptimizing: begin 0xf7e1f621 set @19]
  translating set => node=76, height=40
    0x0020f178: [top + 88] <- 0x9fc9c0f9 ; [sp + 176] 000000009FC9C0F9 <a Map>
    0x0020f170: [top + 80] <- 0xef404d49 ; [sp + 168] 00000000EF404D49 <String[1]: 0>
    0x0020f168: [top + 72] <- 0x9fc9c179 ; [sp + 160] 000000009FC9C179 <an Object>
    0x0020f160: [top + 64] <- 0xbbe6995b ; caller's pc
    0x0020f158: [top + 56] <- 0x0020f1d0 ; caller's fp
    0x0020f150: [top + 48] <- 0x82bc5dd1; context
    0x0020f148: [top + 40] <- 0xf7e1f621; function
    0x0020f140: [top + 32] <- 00000000F7E04121 <undefined> ; literal
    0x0020f138: [top + 24] <- 00000000F7E04121 <undefined> ; literal
    0x0020f130: [top + 16] <- 00000000F7E04121 <undefined> ; literal
    0x0020f128: [top + 8] <- 00000000F7E04121 <undefined> ; literal
    0x0020f120: [top + 0] <- 0xf7e1f621 ; [sp + 112] 00000000F7E1F621 <JS Function set>
  translating _keyAsBucketIndex => node=52, height=16
    0x0020f118: [top + 56] <- 0x9fc9c0f9 ; [sp + 176] 000000009FC9C0F9 <a Map>
    0x0020f110: [top + 48] <- 0xef404d49 ; [sp + 168] 00000000EF404D49 <String[1]: 0>
    0x0020f108: [top + 40] <- 0xbbe8499d ; caller's pc
    0x0020f100: [top + 32] <- 0x0020f158 ; caller's fp
    0x0020f0f8: [top + 24] <- 0x82bc5dd1; context
    0x0020f0f0: [top + 16] <- 0xf7e1f279; function
    0x0020f0e8: [top + 8] <- 00000000F7E1F279 <JS Function _keyAsBucketIndex> ; literal
    0x0020f0e0: [top + 0] <- 0x82bced89 ; [sp + 104] 0000000082BCED89 <JS Function hash>
  translating hash => node=67, height=8
    0x0020f0d8: [top + 56] <- 00000000F7E04121 <undefined> ; literal
    0x0020f0d0: [top + 48] <- 0xef404d49 ; [sp + 168] 00000000EF404D49 <String[1]: 0>
    0x0020f0c8: [top + 40] <- 0x20000000000000 ; [sp + 88] 2097152
    0x0020f0c0: [top + 32] <- 0xbbe84d5d ; caller's pc
    0x0020f0b8: [top + 24] <- 0x0020f100 ; caller's fp
    0x0020f0b0: [top + 16] <- 0x82bc5dd1; context
    0x0020f0a8: [top + 8] <- 0x82bced89; function
    0x0020f0a0: [top + 0] <- 0x2b59500000000 ; rbx 177557
[deoptimizing: end 0x82bced89 hash => node=67, pc=0xbbe86608, state=NO_REGISTERS, alignment=no padding, took 0.000 ms]
[removing optimized code for: set]
[optimizing: inserted / f7e1fa59 - took 0.000, 0.000, 0.000 ms]
Inlined _isOverCapacity called from _checkResize.
[optimizing: _checkResize / f7e1f3e1 - took 0.000, 0.000, 0.000 ms]
**** DEOPT: hash at bailout #12, address 0x0, frame size 40
            ;;; @126: deoptimize.
[deoptimizing: begin 0x82bced89 hash @12]
  translating hash => node=67, height=8
    0x0020f0d8: [top + 56] <- 0xf7e04121 ; [sp + 88] 00000000F7E04121 <undefined>
    0x0020f0d0: [top + 48] <- 0xef411d71 ; [sp + 80] 00000000EF411D71 <String[1]: 1>
    0x0020f0c8: [top + 40] <- 0x20000000000000 ; [sp + 72] 2097152
    0x0020f0c0: [top + 32] <- 0xbbe8bf2d ; caller's pc
    0x0020f0b8: [top + 24] <- 0x0020f100 ; caller's fp
    0x0020f0b0: [top + 16] <- 0x82bc5dd1; context
    0x0020f0a8: [top + 8] <- 0x82bced89; function
    0x0020f0a0: [top + 0] <- 0x2b59400000000 ; rbx 177556
[deoptimizing: end 0x82bced89 hash => node=67, pc=0xbbe86608, state=NO_REGISTERS, alignment=no padding, took 0.000 ms]
[removing optimized code for: hash]
[marking set 0xf7e1f620 for recompilation, reason: small function, ICs with typeinfo: 15/19 (78%)]
Inlined _keyAsBucketIndex called from set.
Inlined equals called from _getEntryWithKey.
Inlined _getEntryWithKey called from set.
Inlined Entry called from set.
Inlined inserted called from set.
Inlined _isOverCapacity called from _checkResize.
Inlined _checkResize called from set.
[optimizing: set / f7e1f621 - took 1.000, 0.000, 0.000 ms]
**** DEOPT: set at bailout #39, address 0x0, frame size 56
            ;;; Deferred code @288: tagged-to-i.
[deoptimizing: begin 0xf7e1f621 set @39]
  translating set => node=129, height=40
    0x0020f178: [top + 88] <- 0x9fc9c0f9 ; rdx 000000009FC9C0F9 <a Map>
    0x0020f170: [top + 80] <- 0x8e731409 ; [sp + 96] 000000008E731409 <String[3]: 131>
    0x0020f168: [top + 72] <- 0x9fc9c179 ; [sp + 88] 000000009FC9C179 <an Object>
    0x0020f160: [top + 64] <- 0xbbe6995b ; caller's pc
    0x0020f158: [top + 56] <- 0x0020f1d0 ; caller's fp
    0x0020f150: [top + 48] <- 0x82bc5dd1; context
    0x0020f148: [top + 40] <- 0xf7e1f621; function
    0x0020f140: [top + 32] <- 0x66d3600000000 ; rbx 421174
    0x0020f138: [top + 24] <- 00000000F7E04121 <undefined> ; literal
    0x0020f130: [top + 16] <- 0xf7e04101 ; rcx 00000000F7E04101 <null>
    0x0020f128: [top + 8] <- 00000000F7E04121 <undefined> ; literal
    0x0020f120: [top + 0] <- 0xf7e1f621 ; [sp + 40] 00000000F7E1F621 <JS Function set>
  translating _getEntryWithKey => node=29, height=16
    0x0020f118: [top + 64] <- 0x9fc9c0f9 ; rdx 000000009FC9C0F9 <a Map>
    0x0020f110: [top + 56] <- 0xf7e04101 ; rcx 00000000F7E04101 <null>
    0x0020f108: [top + 48] <- 0x8e731409 ; [sp + 96] 000000008E731409 <String[3]: 131>
    0x0020f100: [top + 40] <- 0xbbe849e7 ; caller's pc
    0x0020f0f8: [top + 32] <- 0x0020f158 ; caller's fp
    0x0020f0f0: [top + 24] <- 0x82bc5dd1; context
    0x0020f0e8: [top + 16] <- 0xf7e1f429; function
    0x0020f0e0: [top + 8] <- 0000000082BCEDD1 <JS Function equals> ; literal
    0x0020f0d8: [top + 0] <- 00000000F7E1F429 <JS Function _getEntryWithKey> ; literal
[deoptimizing: end 0xf7e1f429 _getEntryWithKey => node=29, pc=0xbbe86971, state=NO_REGISTERS, alignment=no padding, took 0.000 ms]
[removing optimized code for: set]
[marking hash 0x82bced88 for recompilation, reason: small function, ICs with typeinfo: 5/15 (33%)]
[marking set 0xf7e1f620 for recompilation, reason: small function, ICs with typeinfo: 15/19 (78%)]
Inlined _keyAsBucketIndex called from set.
Inlined equals called from _getEntryWithKey.
Inlined _getEntryWithKey called from set.
Inlined Entry called from set.
Inlined inserted called from set.
Inlined _isOverCapacity called from _checkResize.
Inlined _checkResize called from set.
[optimizing: set / f7e1f621 - took 0.000, 1.000, 0.000 ms]
Inlining builtin 00000000F7E18EA9 <JS Function charCodeAt>
Inlined hashString called from hash.
[optimizing: hash / 82bced89 - took 0.000, 0.000, 0.000 ms]
**** DEOPT: set at bailout #39, address 0x0, frame size 56
            ;;; Deferred code @288: tagged-to-i.
[deoptimizing: begin 0xf7e1f621 set @39]
  translating set => node=129, height=40
    0x0020f178: [top + 88] <- 0x9fc9c0f9 ; rdx 000000009FC9C0F9 <a Map>
    0x0020f170: [top + 80] <- 0x8e732449 ; [sp + 96] 000000008E732449 <String[3]: 262>
    0x0020f168: [top + 72] <- 0x9fc9c179 ; [sp + 88] 000000009FC9C179 <an Object>
    0x0020f160: [top + 64] <- 0xbbe6995b ; caller's pc
    0x0020f158: [top + 56] <- 0x0020f1d0 ; caller's fp
    0x0020f150: [top + 48] <- 0x82bc5dd1; context
    0x0020f148: [top + 40] <- 0xf7e1f621; function
    0x0020f140: [top + 32] <- 0x6705300000000 ; rbx 421971
    0x0020f138: [top + 24] <- 00000000F7E04121 <undefined> ; literal
    0x0020f130: [top + 16] <- 0xf7e04101 ; rcx 00000000F7E04101 <null>
    0x0020f128: [top + 8] <- 00000000F7E04121 <undefined> ; literal
    0x0020f120: [top + 0] <- 0xf7e1f621 ; [sp + 40] 00000000F7E1F621 <JS Function set>
  translating _getEntryWithKey => node=29, height=16
    0x0020f118: [top + 64] <- 0x9fc9c0f9 ; rdx 000000009FC9C0F9 <a Map>
    0x0020f110: [top + 56] <- 0xf7e04101 ; rcx 00000000F7E04101 <null>
    0x0020f108: [top + 48] <- 0x8e732449 ; [sp + 96] 000000008E732449 <String[3]: 262>
    0x0020f100: [top + 40] <- 0xbbe849e7 ; caller's pc
    0x0020f0f8: [top + 32] <- 0x0020f158 ; caller's fp
    0x0020f0f0: [top + 24] <- 0x82bc5dd1; context
    0x0020f0e8: [top + 16] <- 0xf7e1f429; function
    0x0020f0e0: [top + 8] <- 0000000082BCEDD1 <JS Function equals> ; literal
    0x0020f0d8: [top + 0] <- 00000000F7E1F429 <JS Function _getEntryWithKey> ; literal
[deoptimizing: end 0xf7e1f429 _getEntryWithKey => node=29, pc=0xbbe86971, state=NO_REGISTERS, alignment=no padding, took 1.000 ms]
[removing optimized code for: set]
[marking set 0xf7e1f620 for recompilation, reason: small function, ICs with typeinfo: 15/19 (78%)]
Inlined _keyAsBucketIndex called from set.
Inlined equals called from _getEntryWithKey.
Inlined _getEntryWithKey called from set.
Inlined Entry called from set.
Inlined inserted called from set.
Inlined _isOverCapacity called from _checkResize.
Inlined _checkResize called from set.
[optimizing: set / f7e1f621 - took 0.000, 0.000, 0.000 ms]
**** DEOPT: set at bailout #39, address 0x0, frame size 56
            ;;; Deferred code @288: tagged-to-i.
[deoptimizing: begin 0xf7e1f621 set @39]
  translating set => node=129, height=40
    0x0020f178: [top + 88] <- 0x9fc9c0f9 ; rdx 000000009FC9C0F9 <a Map>
    0x0020f170: [top + 80] <- 0x8e7334a9 ; [sp + 96] 000000008E7334A9 <String[3]: 393>
    0x0020f168: [top + 72] <- 0x9fc9c179 ; [sp + 88] 000000009FC9C179 <an Object>
    0x0020f160: [top + 64] <- 0xbbe6995b ; caller's pc
    0x0020f158: [top + 56] <- 0x0020f1d0 ; caller's fp
    0x0020f150: [top + 48] <- 0x82bc5dd1; context
    0x0020f148: [top + 40] <- 0xf7e1f621; function
    0x0020f140: [top + 32] <- 0x6767c00000000 ; rbx 423548
    0x0020f138: [top + 24] <- 00000000F7E04121 <undefined> ; literal
    0x0020f130: [top + 16] <- 0xf7e04101 ; rcx 00000000F7E04101 <null>
    0x0020f128: [top + 8] <- 00000000F7E04121 <undefined> ; literal
    0x0020f120: [top + 0] <- 0xf7e1f621 ; [sp + 40] 00000000F7E1F621 <JS Function set>
  translating _getEntryWithKey => node=29, height=16
    0x0020f118: [top + 64] <- 0x9fc9c0f9 ; rdx 000000009FC9C0F9 <a Map>
    0x0020f110: [top + 56] <- 0xf7e04101 ; rcx 00000000F7E04101 <null>
    0x0020f108: [top + 48] <- 0x8e7334a9 ; [sp + 96] 000000008E7334A9 <String[3]: 393>
    0x0020f100: [top + 40] <- 0xbbe849e7 ; caller's pc
    0x0020f0f8: [top + 32] <- 0x0020f158 ; caller's fp
    0x0020f0f0: [top + 24] <- 0x82bc5dd1; context
    0x0020f0e8: [top + 16] <- 0xf7e1f429; function
    0x0020f0e0: [top + 8] <- 0000000082BCEDD1 <JS Function equals> ; literal
    0x0020f0d8: [top + 0] <- 00000000F7E1F429 <JS Function _getEntryWithKey> ; literal
[deoptimizing: end 0xf7e1f429 _getEntryWithKey => node=29, pc=0xbbe86971, state=NO_REGISTERS, alignment=no padding, took 0.000 ms]
[removing optimized code for: set]
[marking set 0xf7e1f620 for recompilation, reason: small function, ICs with typeinfo: 15/19 (78%)]
Inlined _keyAsBucketIndex called from set.
Inlined equals called from _getEntryWithKey.
Inlined _getEntryWithKey called from set.
Inlined Entry called from set.
Inlined inserted called from set.
Inlined _isOverCapacity called from _checkResize.
Inlined _checkResize called from set.
[optimizing: set / f7e1f621 - took 1.000, 0.000, 0.000 ms]
**** DEOPT: set at bailout #39, address 0x0, frame size 56
            ;;; Deferred code @288: tagged-to-i.
[deoptimizing: begin 0xf7e1f621 set @39]
  translating set => node=129, height=40
    0x0020f178: [top + 88] <- 0x9fc9c0f9 ; rdx 000000009FC9C0F9 <a Map>
    0x0020f170: [top + 80] <- 0x8e734509 ; [sp + 96] 000000008E734509 <String[3]: 524>
    0x0020f168: [top + 72] <- 0x9fc9c179 ; [sp + 88] 000000009FC9C179 <an Object>
    0x0020f160: [top + 64] <- 0xbbe6995b ; caller's pc
    0x0020f158: [top + 56] <- 0x0020f1d0 ; caller's fp
    0x0020f150: [top + 48] <- 0x82bc5dd1; context
    0x0020f148: [top + 40] <- 0xf7e1f621; function
    0x0020f140: [top + 32] <- 0x65bd600000000 ; rbx 416726
    0x0020f138: [top + 24] <- 00000000F7E04121 <undefined> ; literal
    0x0020f130: [top + 16] <- 0xf7e04101 ; rcx 00000000F7E04101 <null>
    0x0020f128: [top + 8] <- 00000000F7E04121 <undefined> ; literal
    0x0020f120: [top + 0] <- 0xf7e1f621 ; [sp + 40] 00000000F7E1F621 <JS Function set>
  translating _getEntryWithKey => node=29, height=16
    0x0020f118: [top + 64] <- 0x9fc9c0f9 ; rdx 000000009FC9C0F9 <a Map>
    0x0020f110: [top + 56] <- 0xf7e04101 ; rcx 00000000F7E04101 <null>
    0x0020f108: [top + 48] <- 0x8e734509 ; [sp + 96] 000000008E734509 <String[3]: 524>
    0x0020f100: [top + 40] <- 0xbbe849e7 ; caller's pc
    0x0020f0f8: [top + 32] <- 0x0020f158 ; caller's fp
    0x0020f0f0: [top + 24] <- 0x82bc5dd1; context
    0x0020f0e8: [top + 16] <- 0xf7e1f429; function
    0x0020f0e0: [top + 8] <- 0000000082BCEDD1 <JS Function equals> ; literal
    0x0020f0d8: [top + 0] <- 00000000F7E1F429 <JS Function _getEntryWithKey> ; literal
[deoptimizing: end 0xf7e1f429 _getEntryWithKey => node=29, pc=0xbbe86971, state=NO_REGISTERS, alignment=no padding, took 0.000 ms]
[removing optimized code for: set]
[marking set 0xf7e1f620 for recompilation, reason: small function, ICs with typeinfo: 15/19 (78%)]
Inlined _keyAsBucketIndex called from set.
Inlined equals called from _getEntryWithKey.
Inlined _getEntryWithKey called from set.
Inlined Entry called from set.
Inlined inserted called from set.
Inlined _isOverCapacity called from _checkResize.
Inlined _checkResize called from set.
[optimizing: set / f7e1f621 - took 0.000, 1.000, 0.000 ms]
**** DEOPT: set at bailout #39, address 0x0, frame size 56
            ;;; Deferred code @288: tagged-to-i.
[deoptimizing: begin 0xf7e1f621 set @39]
  translating set => node=129, height=40
    0x0020f178: [top + 88] <- 0x9fc9c0f9 ; rdx 000000009FC9C0F9 <a Map>
    0x0020f170: [top + 80] <- 0x8e735569 ; [sp + 96] 000000008E735569 <String[3]: 655>
    0x0020f168: [top + 72] <- 0x9fc9c179 ; [sp + 88] 000000009FC9C179 <an Object>
    0x0020f160: [top + 64] <- 0xbbe6995b ; caller's pc
    0x0020f158: [top + 56] <- 0x0020f1d0 ; caller's fp
    0x0020f150: [top + 48] <- 0x82bc5dd1; context
    0x0020f148: [top + 40] <- 0xf7e1f621; function
    0x0020f140: [top + 32] <- 0x660b300000000 ; rbx 417971
    0x0020f138: [top + 24] <- 00000000F7E04121 <undefined> ; literal
    0x0020f130: [top + 16] <- 0xf7e04101 ; rcx 00000000F7E04101 <null>
    0x0020f128: [top + 8] <- 00000000F7E04121 <undefined> ; literal
    0x0020f120: [top + 0] <- 0xf7e1f621 ; [sp + 40] 00000000F7E1F621 <JS Function set>
  translating _getEntryWithKey => node=29, height=16
    0x0020f118: [top + 64] <- 0x9fc9c0f9 ; rdx 000000009FC9C0F9 <a Map>
    0x0020f110: [top + 56] <- 0xf7e04101 ; rcx 00000000F7E04101 <null>
    0x0020f108: [top + 48] <- 0x8e735569 ; [sp + 96] 000000008E735569 <String[3]: 655>
    0x0020f100: [top + 40] <- 0xbbe849e7 ; caller's pc
    0x0020f0f8: [top + 32] <- 0x0020f158 ; caller's fp
    0x0020f0f0: [top + 24] <- 0x82bc5dd1; context
    0x0020f0e8: [top + 16] <- 0xf7e1f429; function
    0x0020f0e0: [top + 8] <- 0000000082BCEDD1 <JS Function equals> ; literal
    0x0020f0d8: [top + 0] <- 00000000F7E1F429 <JS Function _getEntryWithKey> ; literal
[deoptimizing: end 0xf7e1f429 _getEntryWithKey => node=29, pc=0xbbe86971, state=NO_REGISTERS, alignment=no padding, took 0.000 ms]
[removing optimized code for: set]
[marking set 0xf7e1f620 for recompilation, reason: small function, ICs with typeinfo: 15/19 (78%)]
Inlined _keyAsBucketIndex called from set.
Inlined equals called from _getEntryWithKey.
Inlined _getEntryWithKey called from set.
Inlined Entry called from set.
Inlined inserted called from set.
Inlined _isOverCapacity called from _checkResize.
Inlined _checkResize called from set.
[optimizing: set / f7e1f621 - took 0.000, 0.000, 0.000 ms]
**** DEOPT: set at bailout #39, address 0x0, frame size 56
            ;;; Deferred code @288: tagged-to-i.
[deoptimizing: begin 0xf7e1f621 set @39]
  translating set => node=129, height=40
    0x0020f178: [top + 88] <- 0x9fc9c0f9 ; rdx 000000009FC9C0F9 <a Map>
    0x0020f170: [top + 80] <- 0x8e7365c9 ; [sp + 96] 000000008E7365C9 <String[3]: 786>
    0x0020f168: [top + 72] <- 0x9fc9c179 ; [sp + 88] 000000009FC9C179 <an Object>
    0x0020f160: [top + 64] <- 0xbbe6995b ; caller's pc
    0x0020f158: [top + 56] <- 0x0020f1d0 ; caller's fp
    0x0020f150: [top + 48] <- 0x82bc5dd1; context
    0x0020f148: [top + 40] <- 0xf7e1f621; function
    0x0020f140: [top + 32] <- 0x6651c00000000 ; rbx 419100
    0x0020f138: [top + 24] <- 00000000F7E04121 <undefined> ; literal
    0x0020f130: [top + 16] <- 0xf7e04101 ; rcx 00000000F7E04101 <null>
    0x0020f128: [top + 8] <- 00000000F7E04121 <undefined> ; literal
    0x0020f120: [top + 0] <- 0xf7e1f621 ; [sp + 40] 00000000F7E1F621 <JS Function set>
  translating _getEntryWithKey => node=29, height=16
    0x0020f118: [top + 64] <- 0x9fc9c0f9 ; rdx 000000009FC9C0F9 <a Map>
    0x0020f110: [top + 56] <- 0xf7e04101 ; rcx 00000000F7E04101 <null>
    0x0020f108: [top + 48] <- 0x8e7365c9 ; [sp + 96] 000000008E7365C9 <String[3]: 786>
    0x0020f100: [top + 40] <- 0xbbe849e7 ; caller's pc
    0x0020f0f8: [top + 32] <- 0x0020f158 ; caller's fp
    0x0020f0f0: [top + 24] <- 0x82bc5dd1; context
    0x0020f0e8: [top + 16] <- 0xf7e1f429; function
    0x0020f0e0: [top + 8] <- 0000000082BCEDD1 <JS Function equals> ; literal
    0x0020f0d8: [top + 0] <- 00000000F7E1F429 <JS Function _getEntryWithKey> ; literal
[deoptimizing: end 0xf7e1f429 _getEntryWithKey => node=29, pc=0xbbe86971, state=NO_REGISTERS, alignment=no padding, took 0.000 ms]
[removing optimized code for: set]
[marking set 0xf7e1f620 for recompilation, reason: small function, ICs with typeinfo: 15/19 (78%)]
Inlined _keyAsBucketIndex called from set.
Inlined equals called from _getEntryWithKey.
Inlined _getEntryWithKey called from set.
Inlined Entry called from set.
Inlined inserted called from set.
Inlined _isOverCapacity called from _checkResize.
Inlined _checkResize called from set.
[optimizing: set / f7e1f621 - took 0.000, 0.000, 0.000 ms]
**** DEOPT: set at bailout #39, address 0x0, frame size 56
            ;;; Deferred code @288: tagged-to-i.
[deoptimizing: begin 0xf7e1f621 set @39]
  translating set => node=129, height=40
    0x0020f178: [top + 88] <- 0x9fc9c0f9 ; rdx 000000009FC9C0F9 <a Map>
    0x0020f170: [top + 80] <- 0x8e737629 ; [sp + 96] 000000008E737629 <String[3]: 917>
    0x0020f168: [top + 72] <- 0x9fc9c179 ; [sp + 88] 000000009FC9C179 <an Object>
    0x0020f160: [top + 64] <- 0xbbe6995b ; caller's pc
    0x0020f158: [top + 56] <- 0x0020f1d0 ; caller's fp
    0x0020f150: [top + 48] <- 0x82bc5dd1; context
    0x0020f148: [top + 40] <- 0xf7e1f621; function
    0x0020f140: [top + 32] <- 0x68efa00000000 ; rbx 429818
    0x0020f138: [top + 24] <- 00000000F7E04121 <undefined> ; literal
    0x0020f130: [top + 16] <- 0xf7e04101 ; rcx 00000000F7E04101 <null>
    0x0020f128: [top + 8] <- 00000000F7E04121 <undefined> ; literal
    0x0020f120: [top + 0] <- 0xf7e1f621 ; [sp + 40] 00000000F7E1F621 <JS Function set>
  translating _getEntryWithKey => node=29, height=16
    0x0020f118: [top + 64] <- 0x9fc9c0f9 ; rdx 000000009FC9C0F9 <a Map>
    0x0020f110: [top + 56] <- 0xf7e04101 ; rcx 00000000F7E04101 <null>
    0x0020f108: [top + 48] <- 0x8e737629 ; [sp + 96] 000000008E737629 <String[3]: 917>
    0x0020f100: [top + 40] <- 0xbbe849e7 ; caller's pc
    0x0020f0f8: [top + 32] <- 0x0020f158 ; caller's fp
    0x0020f0f0: [top + 24] <- 0x82bc5dd1; context
    0x0020f0e8: [top + 16] <- 0xf7e1f429; function
    0x0020f0e0: [top + 8] <- 0000000082BCEDD1 <JS Function equals> ; literal
    0x0020f0d8: [top + 0] <- 00000000F7E1F429 <JS Function _getEntryWithKey> ; literal
[deoptimizing: end 0xf7e1f429 _getEntryWithKey => node=29, pc=0xbbe86971, state=NO_REGISTERS, alignment=no padding, took 0.000 ms]
[removing optimized code for: set]
[marking set 0xf7e1f620 for recompilation, reason: small function, ICs with typeinfo: 15/19 (78%)]
Inlined _keyAsBucketIndex called from set.
Inlined equals called from _getEntryWithKey.
Inlined _getEntryWithKey called from set.
Inlined Entry called from set.
Inlined inserted called from set.
Inlined _isOverCapacity called from _checkResize.
Inlined _checkResize called from set.
[optimizing: set / f7e1f621 - took 0.000, 0.000, 0.000 ms]
**** DEOPT: set at bailout #39, address 0x0, frame size 56
            ;;; Deferred code @288: tagged-to-i.
[deoptimizing: begin 0xf7e1f621 set @39]
  translating set => node=129, height=40
    0x0020f178: [top + 88] <- 0x9fc9c0f9 ; rdx 000000009FC9C0F9 <a Map>
    0x0020f170: [top + 80] <- 0x8e738689 ; [sp + 96] 000000008E738689 <String[4]: 1048>
    0x0020f168: [top + 72] <- 0x9fc9c179 ; [sp + 88] 000000009FC9C179 <an Object>
    0x0020f160: [top + 64] <- 0xbbe6995b ; caller's pc
    0x0020f158: [top + 56] <- 0x0020f1d0 ; caller's fp
    0x0020f150: [top + 48] <- 0x82bc5dd1; context
    0x0020f148: [top + 40] <- 0xf7e1f621; function
    0x0020f140: [top + 32] <- 0x13fea800000000 ; rbx 1310376
    0x0020f138: [top + 24] <- 00000000F7E04121 <undefined> ; literal
    0x0020f130: [top + 16] <- 0xf7e04101 ; rcx 00000000F7E04101 <null>
    0x0020f128: [top + 8] <- 00000000F7E04121 <undefined> ; literal
    0x0020f120: [top + 0] <- 0xf7e1f621 ; [sp + 40] 00000000F7E1F621 <JS Function set>
  translating _getEntryWithKey => node=29, height=16
    0x0020f118: [top + 64] <- 0x9fc9c0f9 ; rdx 000000009FC9C0F9 <a Map>
    0x0020f110: [top + 56] <- 0xf7e04101 ; rcx 00000000F7E04101 <null>
    0x0020f108: [top + 48] <- 0x8e738689 ; [sp + 96] 000000008E738689 <String[4]: 1048>
    0x0020f100: [top + 40] <- 0xbbe849e7 ; caller's pc
    0x0020f0f8: [top + 32] <- 0x0020f158 ; caller's fp
    0x0020f0f0: [top + 24] <- 0x82bc5dd1; context
    0x0020f0e8: [top + 16] <- 0xf7e1f429; function
    0x0020f0e0: [top + 8] <- 0000000082BCEDD1 <JS Function equals> ; literal
    0x0020f0d8: [top + 0] <- 00000000F7E1F429 <JS Function _getEntryWithKey> ; literal
[deoptimizing: end 0xf7e1f429 _getEntryWithKey => node=29, pc=0xbbe86971, state=NO_REGISTERS, alignment=no padding, took 0.000 ms]
[removing optimized code for: set]
[marking set 0xf7e1f620 for recompilation, reason: small function, ICs with typeinfo: 15/19 (78%)]
Inlined _keyAsBucketIndex called from set.
Inlined equals called from _getEntryWithKey.
Inlined _getEntryWithKey called from set.
Inlined Entry called from set.
Inlined inserted called from set.
Inlined _isOverCapacity called from _checkResize.
Inlined _checkResize called from set.
[optimizing: set / f7e1f621 - took 1.000, 0.000, 0.000 ms]
**** DEOPT: set at bailout #39, address 0x0, frame size 56
            ;;; Deferred code @288: tagged-to-i.
[deoptimizing: begin 0xf7e1f621 set @39]
  translating set => node=129, height=40
    0x0020f178: [top + 88] <- 0x9fc9c0f9 ; rdx 000000009FC9C0F9 <a Map>
    0x0020f170: [top + 80] <- 0x8e7f0761 ; [sp + 96] 000000008E7F0761 <String[5]: 23382>
    0x0020f168: [top + 72] <- 0x9fc9c179 ; [sp + 88] 000000009FC9C179 <an Object>
    0x0020f160: [top + 64] <- 0xbbe6995b ; caller's pc
    0x0020f158: [top + 56] <- 0x0020f1d0 ; caller's fp
    0x0020f150: [top + 48] <- 0x82bc5dd1; context
    0x0020f148: [top + 40] <- 0xf7e1f621; function
    0x0020f140: [top + 32] <- 0x68dfd00000000 ; rbx 429565
    0x0020f138: [top + 24] <- 00000000F7E04121 <undefined> ; literal
    0x0020f130: [top + 16] <- 0x9cf0dd31 ; rcx 000000009CF0DD31 <an Entry>
    0x0020f128: [top + 8] <- 00000000F7E04121 <undefined> ; literal
    0x0020f120: [top + 0] <- 0xf7e1f621 ; [sp + 40] 00000000F7E1F621 <JS Function set>
  translating _getEntryWithKey => node=58, height=24
    0x0020f118: [top + 72] <- 0x9fc9c0f9 ; rdx 000000009FC9C0F9 <a Map>
    0x0020f110: [top + 64] <- 0x9cf0dd31 ; rax 000000009CF0DD31 <an Entry>
    0x0020f108: [top + 56] <- 0x8e7f0761 ; [sp + 96] 000000008E7F0761 <String[5]: 23382>
    0x0020f100: [top + 48] <- 0xbbe849e7 ; caller's pc
    0x0020f0f8: [top + 40] <- 0x0020f158 ; caller's fp
    0x0020f0f0: [top + 32] <- 0x82bc5dd1; context
    0x0020f0e8: [top + 24] <- 0xf7e1f429; function
    0x0020f0e0: [top + 16] <- 0000000082BCEDD1 <JS Function equals> ; literal
    0x0020f0d8: [top + 8] <- 00000000F7E1F429 <JS Function _getEntryWithKey> ; literal
    0x0020f0d0: [top + 0] <- 0000000082BCEDD1 <JS Function equals> ; literal
  translating equals => node=2, height=0
    0x0020f0c8: [top + 48] <- 00000000F7E04121 <undefined> ; literal
    0x0020f0c0: [top + 40] <- 0x8e738049 ; rdi 000000008E738049 <String[3]: 998>
    0x0020f0b8: [top + 32] <- 0x8e7f0761 ; [sp + 96] 000000008E7F0761 <String[5]: 23382>
    0x0020f0b0: [top + 24] <- 0xbbe868d4 ; caller's pc
    0x0020f0a8: [top + 16] <- 0x0020f0f8 ; caller's fp
    0x0020f0a0: [top + 8] <- 0x82bc5dd1; context
    0x0020f098: [top + 0] <- 0x82bcedd1; function
[deoptimizing: end 0x82bcedd1 equals => node=2, pc=0xbbe8c0b4, state=NO_REGISTERS, alignment=no padding, took 0.000 ms]
[removing optimized code for: set]
**** DEOPT: equals at bailout #1, address 0x0, frame size 0
            ;;; Deferred code @18: tagged-to-i.
[deoptimizing: begin 0x82bcedd1 equals @1]
  translating equals => node=3, height=0
    0x0020f0c8: [top + 48] <- 0xf7e04121 ; [sp + 48] 00000000F7E04121 <undefined>
    0x0020f0c0: [top + 40] <- 0x8e738069 ; [sp + 40] 000000008E738069 <String[3]: 999>
    0x0020f0b8: [top + 32] <- 0x8e7f0781 ; [sp + 32] 000000008E7F0781 <String[5]: 23383>
    0x0020f0b0: [top + 24] <- 0xbbe868d4 ; caller's pc
    0x0020f0a8: [top + 16] <- 0x0020f0f8 ; caller's fp
    0x0020f0a0: [top + 8] <- 0x82bc5dd1; context
    0x0020f098: [top + 0] <- 0x82bcedd1; function
[deoptimizing: end 0x82bcedd1 equals => node=3, pc=0xbbe8c0b4, state=NO_REGISTERS, alignment=no padding, took 0.000 ms]
[removing optimized code for: equals]
[marking set 0xf7e1f620 for recompilation, reason: small function, ICs with typeinfo: 15/19 (78%)]
Inlined _keyAsBucketIndex called from set.
Inlined equals called from _getEntryWithKey.
Inlined _getEntryWithKey called from set.
Inlined Entry called from set.
Inlined inserted called from set.
Inlined _isOverCapacity called from _checkResize.
Inlined _checkResize called from set.
[optimizing: set / f7e1f621 - took 0.000, 0.000, 0.000 ms]
[marking ENTRY_FUNCTION_MAP_STRING 0x9fc9c190 for recompilation, reason: not much type info but very hot, ICs with typeinfo: 4/36 (11%)]
Did not inline ConstructorProxy called from ENTRY_FUNCTION_MAP_STRING (target requires context change).
Did not inline set called from ENTRY_FUNCTION_MAP_STRING (target text too big).
Did not inline global.setTimeout called from ENTRY_FUNCTION_MAP_STRING (target requires context change).
[optimizing: ENTRY_FUNCTION_MAP_STRING / 9fc9c191 - took 0.000, 0.000, 0.000 ms]
**** DEOPT: ENTRY_FUNCTION_MAP_STRING at bailout #12, address 0x0, frame size 312
            ;;; @146: deoptimize.
[deoptimizing: begin 0x9fc9c191 ENTRY_FUNCTION_MAP_STRING @12]
  translating ENTRY_FUNCTION_MAP_STRING => node=86, height=64
    0x0020f1e0: [top + 96] <- 0xf7e06c91 ; [sp + 144] 00000000F7E06C91 <JS Global Object>
    0x0020f1d8: [top + 88] <- 0xbbe6ac7e ; caller's pc
    0x0020f1d0: [top + 80] <- 0x0020f218 ; caller's fp
    0x0020f1c8: [top + 72] <- 0x9fc9c1d9; context
    0x0020f1c0: [top + 64] <- 0x9fc9c191; function
    0x0020f1b8: [top + 56] <- 0x9fc9c0f9 ; [sp + 160] 000000009FC9C0F9 <a Map>
    0x0020f1b0: [top + 48] <- 0x9fc9c179 ; [sp + 168] 000000009FC9C179 <an Object>
    0x0020f1a8: [top + 40] <- 0xf7e04121 ; [sp + 120] 00000000F7E04121 <undefined>
    0x0020f1a0: [top + 32] <- 0xf424000000000 ; [sp + 176] 1000000
    0x0020f198: [top + 24] <- 1000000 ; [sp + 128] (smi)
    0x0020f190: [top + 16] <- 1000000 ; [sp + 208] (smi)
    0x0020f188: [top + 8] <- 00000000F7E04121 <undefined> ; literal
    0x0020f180: [top + 0] <- 00000000F7E04121 <undefined> ; literal
[deoptimizing: end 0x9fc9c191 ENTRY_FUNCTION_MAP_STRING => node=86, pc=0xbbe699fb, state=NO_REGISTERS, alignment=no padding, took 0.000 ms]
[removing optimized code for: ENTRY_FUNCTION_MAP_STRING]
**** DEOPT: get at bailout #19, address 0x0, frame size 16
            ;;; Deferred code @126: tagged-to-i.
[deoptimizing: begin 0xf7e1f591 get @19]
  translating get => node=80, height=24
    0x0020f178: [top + 64] <- 0x9fc9c0f9 ; rbx 000000009FC9C0F9 <a Map>
    0x0020f170: [top + 56] <- 0xef404d49 ; [sp + 48] 00000000EF404D49 <String[1]: 0>
    0x0020f168: [top + 48] <- 0xbbe69a45 ; caller's pc
    0x0020f160: [top + 40] <- 0x0020f1d0 ; caller's fp
    0x0020f158: [top + 32] <- 0x82bc5dd1; context
    0x0020f150: [top + 24] <- 0xf7e1f591; function
    0x0020f148: [top + 16] <- 0x2b59500000000 ; rax 177557
    0x0020f140: [top + 8] <- 00000000F7E04121 <undefined> ; literal
    0x0020f138: [top + 0] <- 0xf7e1f591 ; [sp + 0] 00000000F7E1F591 <JS Function get>
  translating _getEntryWithKey => node=29, height=16
    0x0020f130: [top + 64] <- 0x9fc9c0f9 ; rbx 000000009FC9C0F9 <a Map>
    0x0020f128: [top + 56] <- 0x9fcbc021 ; rcx 000000009FCBC021 <an Entry>
    0x0020f120: [top + 48] <- 0xef404d49 ; [sp + 48] 00000000EF404D49 <String[1]: 0>
    0x0020f118: [top + 40] <- 0xbbe8bd94 ; caller's pc
    0x0020f110: [top + 32] <- 0x0020f160 ; caller's fp
    0x0020f108: [top + 24] <- 0x82bc5dd1; context
    0x0020f100: [top + 16] <- 0xf7e1f429; function
    0x0020f0f8: [top + 8] <- 0000000082BCEDD1 <JS Function equals> ; literal
    0x0020f0f0: [top + 0] <- 00000000F7E1F429 <JS Function _getEntryWithKey> ; literal
[deoptimizing: end 0xf7e1f429 _getEntryWithKey => node=29, pc=0xbbe86971, state=NO_REGISTERS, alignment=no padding, took 0.000 ms]
[removing optimized code for: get]
[optimizing: accessed / f7e1fae9 - took 0.000, 0.000, 0.000 ms]
[marking get 0xf7e1f590 for recompilation, reason: small function, ICs with typeinfo: 6/6 (100%)]
Inlined _keyAsBucketIndex called from get.
Inlined equals called from _getEntryWithKey.
Inlined _getEntryWithKey called from get.
Inlined accessed called from get.
[optimizing: get / f7e1f591 - took 1.000, 0.000, 0.000 ms]
[marking ENTRY_FUNCTION_MAP_STRING 0x9fc9c190 for recompilation, reason: hot and stable, ICs with typeinfo: 7/36 (19%)]
Did not inline ConstructorProxy called from ENTRY_FUNCTION_MAP_STRING (target requires context change).
Did not inline set called from ENTRY_FUNCTION_MAP_STRING (target text too big).
Did not inline get called from ENTRY_FUNCTION_MAP_STRING (target requires context change).
Did not inline global.setTimeout called from ENTRY_FUNCTION_MAP_STRING (target requires context change).
[optimizing: ENTRY_FUNCTION_MAP_STRING / 9fc9c191 - took 0.000, 0.000, 0.000 ms]
**** DEOPT: ENTRY_FUNCTION_MAP_STRING at bailout #21, address 0x0, frame size 296
            ;;; @214: deoptimize.
[deoptimizing: begin 0x9fc9c191 ENTRY_FUNCTION_MAP_STRING @21]
  translating ENTRY_FUNCTION_MAP_STRING => node=200, height=72
    0x0020f1e0: [top + 104] <- 0xf7e06c91 ; [sp + 112] 00000000F7E06C91 <JS Global Object>
    0x0020f1d8: [top + 96] <- 0xbbe6ac7e ; caller's pc
    0x0020f1d0: [top + 88] <- 0x0020f218 ; caller's fp
    0x0020f1c8: [top + 80] <- 0x9fc9c1d9; context
    0x0020f1c0: [top + 72] <- 0x9fc9c191; function
    0x0020f1b8: [top + 64] <- 0x9fc9c0f9 ; [sp + 128] 000000009FC9C0F9 <a Map>
    0x0020f1b0: [top + 56] <- 00000000F7E04121 <undefined> ; literal
    0x0020f1a8: [top + 48] <- 0x9fc9c179 ; [sp + 88] 000000009FC9C179 <an Object>
    0x0020f1a0: [top + 40] <- 0xf424000000000 ; [sp + 192] 1000000
    0x0020f198: [top + 32] <- 100000 ; [sp + 96] (smi)
    0x0020f190: [top + 24] <- 00000000F7E04121 <undefined> ; literal
    0x0020f188: [top + 16] <- 00000000F7E04121 <undefined> ; literal
    0x0020f180: [top + 8] <- 00000000F7E04121 <undefined> ; literal
    0x0020f178: [top + 0] <- 0x9cfd83f9 ; rbx 000000009CFD83F9 <Number: 1370378792256>
[deoptimizing: end 0x9fc9c191 ENTRY_FUNCTION_MAP_STRING => node=200, pc=0xbbe69b22, state=TOS_REG, alignment=no padding, took 0.000 ms]
[removing optimized code for: ENTRY_FUNCTION_MAP_STRING]
[marking ENTRY_FUNCTION_MAP_STRING 0x9fc9c190 for recompilation, reason: hot and stable, ICs with typeinfo: 10/36 (27%)]
Did not inline ConstructorProxy called from ENTRY_FUNCTION_MAP_STRING (target requires context change).
Did not inline set called from ENTRY_FUNCTION_MAP_STRING (target text too big).
Did not inline get called from ENTRY_FUNCTION_MAP_STRING (target requires context change).
Did not inline get called from ENTRY_FUNCTION_MAP_STRING (target requires context change).
Did not inline global.setTimeout called from ENTRY_FUNCTION_MAP_STRING (target requires context change).
[optimizing: ENTRY_FUNCTION_MAP_STRING / 9fc9c191 - took 0.000, 0.000, 0.000 ms]
**** DEOPT: ENTRY_FUNCTION_MAP_STRING at bailout #28, address 0x0, frame size 304
            ;;; @272: deoptimize.
[deoptimizing: begin 0x9fc9c191 ENTRY_FUNCTION_MAP_STRING @28]
  translating ENTRY_FUNCTION_MAP_STRING => node=234, height=64
    0x0020f1e0: [top + 96] <- 0xf7e06c91 ; [sp + 64] 00000000F7E06C91 <JS Global Object>
    0x0020f1d8: [top + 88] <- 0xbbe6ac7e ; caller's pc
    0x0020f1d0: [top + 80] <- 0x0020f218 ; caller's fp
    0x0020f1c8: [top + 72] <- 0x9fc9c1d9; context
    0x0020f1c0: [top + 64] <- 0x9fc9c191; function
    0x0020f1b8: [top + 56] <- 0x9fc9c0f9 ; [sp + 88] 000000009FC9C0F9 <a Map>
    0x0020f1b0: [top + 48] <- 00000000F7E04121 <undefined> ; literal
    0x0020f1a8: [top + 40] <- 0x9fc9c179 ; [sp + 80] 000000009FC9C179 <an Object>
    0x0020f1a0: [top + 32] <- 0xf424000000000 ; [sp + 96] 1000000
    0x0020f198: [top + 24] <- 1000000 ; [sp + 48] (smi)
    0x0020f190: [top + 16] <- 1000000 ; [sp + 104] (smi)
    0x0020f188: [top + 8] <- 0x9cfd83f9 ; [sp + 200] 000000009CFD83F9 <Number: 1370378792256>
    0x0020f180: [top + 0] <- 00000000F7E04121 <undefined> ; literal
[deoptimizing: end 0x9fc9c191 ENTRY_FUNCTION_MAP_STRING => node=234, pc=0xbbe69c10, state=NO_REGISTERS, alignment=no padding, took 0.000 ms]
[removing optimized code for: ENTRY_FUNCTION_MAP_STRING]
[marking ENTRY_FUNCTION_MAP_STRING 0x9fc9c190 for recompilation, reason: hot and stable, ICs with typeinfo: 14/36 (38%)]
Did not inline ConstructorProxy called from ENTRY_FUNCTION_MAP_STRING (target requires context change).
Did not inline set called from ENTRY_FUNCTION_MAP_STRING (target text too big).
Did not inline get called from ENTRY_FUNCTION_MAP_STRING (target requires context change).
Did not inline get called from ENTRY_FUNCTION_MAP_STRING (target requires context change).
Did not inline get called from ENTRY_FUNCTION_MAP_STRING (target requires context change).
Did not inline global.setTimeout called from ENTRY_FUNCTION_MAP_STRING (target requires context change).
[optimizing: ENTRY_FUNCTION_MAP_STRING / 9fc9c191 - took 0.000, 1.000, 0.000 ms]
**** DEOPT: ENTRY_FUNCTION_MAP_STRING at bailout #40, address 0x0, frame size 312
            ;;; @372: deoptimize.
[deoptimizing: begin 0x9fc9c191 ENTRY_FUNCTION_MAP_STRING @40]
  translating ENTRY_FUNCTION_MAP_STRING => node=334, height=64
    0x0020f1e0: [top + 96] <- 0xf7e06c91 ; [sp + 40] 00000000F7E06C91 <JS Global Object>
    0x0020f1d8: [top + 88] <- 0xbbe6ac7e ; caller's pc
    0x0020f1d0: [top + 80] <- 0x0020f218 ; caller's fp
    0x0020f1c8: [top + 72] <- 0x9fc9c1d9; context
    0x0020f1c0: [top + 64] <- 0x9fc9c191; function
    0x0020f1b8: [top + 56] <- 0x9fc9c0f9 ; [sp + 64] 000000009FC9C0F9 <a Map>
    0x0020f1b0: [top + 48] <- 00000000F7E04121 <undefined> ; literal
    0x0020f1a8: [top + 40] <- 0x9fc9c179 ; [sp + 56] 000000009FC9C179 <an Object>
    0x0020f1a0: [top + 32] <- 0xf424000000000 ; [sp + 72] 1000000
    0x0020f198: [top + 24] <- 4294967295 ; [sp + 24] (heap number)
    0x0020f190: [top + 16] <- 00000000F7E04121 <undefined> ; literal
    0x0020f188: [top + 8] <- 0x9cfd83f9 ; [sp + 208] 000000009CFD83F9 <Number: 1370378792256>
    0x0020f180: [top + 0] <- 00000000F7E04121 <undefined> ; literal
[deoptimizing: end 0x9fc9c191 ENTRY_FUNCTION_MAP_STRING => node=334, pc=0xbbe69d75, state=NO_REGISTERS, alignment=no padding, took 0.000 ms]
Materializing a new heap number FFFFFFFF00000000 [-1.000000e+000] in slot 000000000020F198
[removing optimized code for: ENTRY_FUNCTION_MAP_STRING]
[marking ENTRY_FUNCTION_NATIVE_STRING 0x9500dd38 for recompilation, reason: not much type info but very hot, ICs with typeinfo: 3/38 (7%)]
Did not inline global.setTimeout called from ENTRY_FUNCTION_NATIVE_STRING (target requires context change).
[optimizing: ENTRY_FUNCTION_NATIVE_STRING / 9500dd39 - took 1.000, 0.000, 0.000 ms]
**** DEOPT: ENTRY_FUNCTION_NATIVE_STRING at bailout #8, address 0x0, frame size 336
            ;;; @122: deoptimize.
[deoptimizing: begin 0x9500dd39 ENTRY_FUNCTION_NATIVE_STRING @8]
  translating ENTRY_FUNCTION_NATIVE_STRING => node=76, height=80
    0x0020f1e0: [top + 112] <- 0xf7e06c91 ; [sp + 136] 00000000F7E06C91 <JS Global Object>
    0x0020f1d8: [top + 104] <- 0xbbe6accf ; caller's pc
    0x0020f1d0: [top + 96] <- 0x0020f218 ; caller's fp
    0x0020f1c8: [top + 88] <- 0x9500dcc1; context
    0x0020f1c0: [top + 80] <- 0x9500dd39; function
    0x0020f1b8: [top + 72] <- 0x9500dd21 ; [sp + 152] 000000009500DD21 <an Object>
    0x0020f1b0: [top + 64] <- 0x9500dd09 ; [sp + 160] 000000009500DD09 <an Object>
    0x0020f1a8: [top + 56] <- 0xf7e04121 ; [sp + 168] 00000000F7E04121 <undefined>
    0x0020f1a0: [top + 48] <- 0xf424000000000 ; [sp + 176] 1000000
    0x0020f198: [top + 40] <- 1000000 ; [sp + 184] (smi)
    0x0020f190: [top + 32] <- 1000000 ; [sp + 192] (smi)
    0x0020f188: [top + 24] <- 00000000F7E04121 <undefined> ; literal
    0x0020f180: [top + 16] <- 00000000F7E04121 <undefined> ; literal
    0x0020f178: [top + 8] <- 00000000F7E04121 <undefined> ; literal
    0x0020f170: [top + 0] <- 00000000F7E04121 <undefined> ; literal
[deoptimizing: end 0x9500dd39 ENTRY_FUNCTION_NATIVE_STRING => node=76, pc=0xbbe6a175, state=NO_REGISTERS, alignment=no padding, took 0.000 ms]
[removing optimized code for: ENTRY_FUNCTION_NATIVE_STRING]
[marking ENTRY_FUNCTION_NATIVE_STRING 0x9500dd38 for recompilation, reason: hot and stable, ICs with typeinfo: 6/38 (15%)]
Did not inline global.setTimeout called from ENTRY_FUNCTION_NATIVE_STRING (target requires context change).
[optimizing: ENTRY_FUNCTION_NATIVE_STRING / 9500dd39 - took 0.000, 0.000, 0.000 ms]
**** DEOPT: ENTRY_FUNCTION_NATIVE_STRING at bailout #14, address 0x0, frame size 320
            ;;; @170: deoptimize.
[deoptimizing: begin 0x9500dd39 ENTRY_FUNCTION_NATIVE_STRING @14]
  translating ENTRY_FUNCTION_NATIVE_STRING => node=137, height=80
    0x0020f1e0: [top + 112] <- 0xf7e06c91 ; [sp + 120] 00000000F7E06C91 <JS Global Object>
    0x0020f1d8: [top + 104] <- 0xbbe6accf ; caller's pc
    0x0020f1d0: [top + 96] <- 0x0020f218 ; caller's fp
    0x0020f1c8: [top + 88] <- 0x9500dcc1; context
    0x0020f1c0: [top + 80] <- 0x9500dd39; function
    0x0020f1b8: [top + 72] <- 0x9500dd21 ; [sp + 136] 000000009500DD21 <an Object>
    0x0020f1b0: [top + 64] <- 00000000F7E04121 <undefined> ; literal
    0x0020f1a8: [top + 56] <- 0xf7e04121 ; [sp + 144] 00000000F7E04121 <undefined>
    0x0020f1a0: [top + 48] <- 0xf424000000000 ; [sp + 184] 1000000
    0x0020f198: [top + 40] <- 100000 ; [sp + 104] (smi)
    0x0020f190: [top + 32] <- 00000000F7E04121 <undefined> ; literal
    0x0020f188: [top + 24] <- 00000000F7E04121 <undefined> ; literal
    0x0020f180: [top + 16] <- 00000000F7E04121 <undefined> ; literal
    0x0020f178: [top + 8] <- 00000000F7E04121 <undefined> ; literal
    0x0020f170: [top + 0] <- 00000000F7E04121 <undefined> ; literal
[deoptimizing: end 0x9500dd39 ENTRY_FUNCTION_NATIVE_STRING => node=137, pc=0xbbe6a260, state=NO_REGISTERS, alignment=no padding, took 0.000 ms]
[removing optimized code for: ENTRY_FUNCTION_NATIVE_STRING]
[marking hasOwnProperty 0xf7e110e0 for recompilation, reason: small function, ICs with typeinfo: 0/5 (0%)]
Did not inline NonStringToString called from hasOwnProperty (target not inlineable).
Did not inline CallTrap1 called from hasOwnProperty (target not inlineable).
Did not inline ToObject called from hasOwnProperty (target not inlineable).
Did not inline NonStringToString called from hasOwnProperty (target not inlineable).
[optimizing: hasOwnProperty / f7e110e1 - took 0.000, 0.000, 0.000 ms]
[marking ENTRY_FUNCTION_NATIVE_STRING 0x9500dd38 for recompilation, reason: hot and stable, ICs with typeinfo: 10/38 (26%)]
Did not inline now called from ENTRY_FUNCTION_NATIVE_STRING (target not inlineable).
Did not inline call called from ENTRY_FUNCTION_NATIVE_STRING (target not inlineable).
Did not inline global.setTimeout called from ENTRY_FUNCTION_NATIVE_STRING (target requires context change).
[optimizing: ENTRY_FUNCTION_NATIVE_STRING / 9500dd39 - took 0.000, 0.000, 0.000 ms]
**** DEOPT: ENTRY_FUNCTION_NATIVE_STRING at bailout #27, address 0x0, frame size 328
            ;;; @276: deoptimize.
[deoptimizing: begin 0x9500dd39 ENTRY_FUNCTION_NATIVE_STRING @27]
  translating ENTRY_FUNCTION_NATIVE_STRING => node=223, height=80
    0x0020f1e0: [top + 112] <- 0xf7e06c91 ; [sp + 64] 00000000F7E06C91 <JS Global Object>
    0x0020f1d8: [top + 104] <- 0xbbe6accf ; caller's pc
    0x0020f1d0: [top + 96] <- 0x0020f218 ; caller's fp
    0x0020f1c8: [top + 88] <- 0x9500dcc1; context
    0x0020f1c0: [top + 80] <- 0x9500dd39; function
    0x0020f1b8: [top + 72] <- 0x9500dd21 ; [sp + 96] 000000009500DD21 <an Object>
    0x0020f1b0: [top + 64] <- 00000000F7E04121 <undefined> ; literal
    0x0020f1a8: [top + 56] <- 0x9500dd09 ; [sp + 88] 000000009500DD09 <an Object>
    0x0020f1a0: [top + 48] <- 0xf424000000000 ; [sp + 104] 1000000
    0x0020f198: [top + 40] <- 1000000 ; [sp + 48] (smi)
    0x0020f190: [top + 32] <- 1000000 ; [sp + 120] (smi)
    0x0020f188: [top + 24] <- 0xf7e110e1 ; [sp + 112] 00000000F7E110E1 <JS Function hasOwnProperty>
    0x0020f180: [top + 16] <- 0x9dfe52c1 ; [sp + 192] 000000009DFE52C1 <Number: 1370378792564>
    0x0020f178: [top + 8] <- 00000000F7E04121 <undefined> ; literal
    0x0020f170: [top + 0] <- 00000000F7E04121 <undefined> ; literal
[deoptimizing: end 0x9500dd39 ENTRY_FUNCTION_NATIVE_STRING => node=223, pc=0xbbe6a3d0, state=NO_REGISTERS, alignment=no padding, took 0.000 ms]
[removing optimized code for: ENTRY_FUNCTION_NATIVE_STRINCompleted 3000000 operations in 82 milliseconds.  36585366 OP/s when using when using DS.Map with integers
Completed 3000000 operations in 44 milliseconds.  68181818 OP/s when using Native with integers
Completed 2000000 operations in 150 milliseconds.  13333333 OP/s when using DS.Map with strings
Completed 2000000 operations in 144 milliseconds.  13888889 OP/s when using Native with strings
G]
[marking ENTRY_FUNCTION_NATIVE_STRING 0x9500dd38 for recompilation, reason: hot and stable, ICs with typeinfo: 15/38 (39%)]
Did not inline now called from ENTRY_FUNCTION_NATIVE_STRING (target not inlineable).
Did not inline call called from ENTRY_FUNCTION_NATIVE_STRING (target not inlineable).
Did not inline call called from ENTRY_FUNCTION_NATIVE_STRING (target not inlineable).
Did not inline global.setTimeout called from ENTRY_FUNCTION_NATIVE_STRING (target requires context change).
[optimizing: ENTRY_FUNCTION_NATIVE_STRING / 9500dd39 - took 0.000, 1.000, 0.000 ms]
**** DEOPT: ENTRY_FUNCTION_NATIVE_STRING at bailout #42, address 0x0, frame size 336
            ;;; @400: deoptimize.
[deoptimizing: begin 0x9500dd39 ENTRY_FUNCTION_NATIVE_STRING @42]
  translating ENTRY_FUNCTION_NATIVE_STRING => node=338, height=80
    0x0020f1e0: [top + 112] <- 0xf7e06c91 ; [sp + 40] 00000000F7E06C91 <JS Global Object>
    0x0020f1d8: [top + 104] <- 0xbbe6accf ; caller's pc
    0x0020f1d0: [top + 96] <- 0x0020f218 ; caller's fp
    0x0020f1c8: [top + 88] <- 0x9500dcc1; context
    0x0020f1c0: [top + 80] <- 0x9500dd39; function
    0x0020f1b8: [top + 72] <- 0x9500dd21 ; [sp + 72] 000000009500DD21 <an Object>
    0x0020f1b0: [top + 64] <- 00000000F7E04121 <undefined> ; literal
    0x0020f1a8: [top + 56] <- 0x9500dd09 ; [sp + 64] 000000009500DD09 <an Object>
    0x0020f1a0: [top + 48] <- 0xf424000000000 ; [sp + 80] 1000000
    0x0020f198: [top + 40] <- 4294967295 ; [sp + 24] (heap number)
    0x0020f190: [top + 32] <- 00000000F7E04121 <undefined> ; literal
    0x0020f188: [top + 24] <- 0xf7e110e1 ; [sp + 88] 00000000F7E110E1 <JS Function hasOwnProperty>
    0x0020f180: [top + 16] <- 0x9dfe52c1 ; [sp + 200] 000000009DFE52C1 <Number: 1370378792564>
    0x0020f178: [top + 8] <- 00000000F7E04121 <undefined> ; literal
    0x0020f170: [top + 0] <- 00000000F7E04121 <undefined> ; literal
[deoptimizing: end 0x9500dd39 ENTRY_FUNCTION_NATIVE_STRING => node=338, pc=0xbbe6a547, state=NO_REGISTERS, alignment=no padding, took 0.000 ms]
Materializing a new heap number FFFFFFFF00000000 [-1.000000e+000] in slot 000000000020F198
[removing optimized code for: ENTRY_FUNCTION_NATIVE_STRING]
[marking IN 0xf7e0ab70 for recompilation, reason: hot and stable, ICs with typeinfo: 1/2 (50%)]
[disabled optimization for IN, reason: call to a JavaScript runtime function]
